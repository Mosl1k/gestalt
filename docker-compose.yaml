
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf.template
    environment:
      - REDIS_ADDR=redis:6379
    env_file: .env
    command: sh -c "sed 's/{{REDIS_PASSWORD}}/${REDIS_PASSWORD}/' /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf && redis-server /usr/local/etc/redis/redis.conf"
    restart: always

  geshtalt:
    build:
      context: .
      dockerfile: Dockerfile  # Dockerfile для Golang
    container_name: geshtalt
    environment:
      - REDIS_ADDR=redis:6379
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      - redis
    restart: always

  alice:
    build:
      context: .
      dockerfile: Dockerfile.python  # Dockerfile для Python
    container_name: alice
    env_file:
      - .env
    ports:
      - "2112:2112"
    depends_on:
      - redis
      - geshtalt
    restart: always

  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    depends_on:
      - redis
    env_file: .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}

 
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   depends_on:
  #     - web
  #   restart: always

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   restart: always

volumes:
  redis_data: